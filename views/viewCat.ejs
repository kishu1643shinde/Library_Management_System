<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>View Categories</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    #viewUsers {
      background: white;
      border-radius: 10px;
      padding: 30px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
      min-height: 90vh;
      margin-top: 30px;
      margin-left: 40px;
    }
    .table th {
      background-color: #343a40;
      color: white;
      text-align: center;
    }
    .table td {
      vertical-align: middle;
    }
    .pagination li a {
      color: #6c63ff;
    }
    .pagination li.active a {
      background-color: #6c63ff;
      color: white;
    }
    .table {
      min-width: 850px;
    }
    a[title] {
      text-decoration: none;
      font-size: 1.3rem;
    }
    a[title]:hover {
      opacity: 0.8;
    }
    .text-gradient {
  background: linear-gradient(to right, #6a11cb, #2575fc);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 1px 1px 2px rgba(0,0,0,0.2);
}

  </style>
</head>
<body>

  <div class="container-fluid mt-4 ms-5 px-3">
    <div class="row">
      <div class="col-12" id="viewUsers">
        <h2 class="mb-4 fw-bold text-gradient">ðŸ“„ View Categories</h2>

        <!-- Search Bar -->
        <div class="mb-3">
          <input 
            type="text" 
            id="searchInput" 
            class="form-control" 
            style="max-width: 400px;"
            placeholder="Search by category name..." 
            onkeyup="filterAndPaginate()" />
        </div>

        <!-- Table -->
        <div class="table-responsive">
          <table class="table table-bordered table-striped table-hover w-100">
            <thead>
              <tr>
                <th>Sr No.</th>
                <th>Name</th>
                <th>Delete</th>
                <th>Update</th>
              </tr>
            </thead>
            <tbody id="studentTable">
              <% categoryData.forEach((item, index) => { %>
                <tr>
                  <td class="text-center"><%= index + 1 %></td>
                  <td><%= item.name %></td>
                  <td class="text-center">
                    <a href="/deleteCategory?id=<%= item.id %>" 
                       class="text-danger" 
                       title="Delete"
                       onclick="return confirm('Are you sure you want to delete this category?');">
                      <i class="bi bi-trash-fill"></i>
                    </a>
                  </td>
                  <td class="text-center">
                    <a href="/updateCat?id=<%= item.id %>" 
                       class="text-primary" 
                       title="Update">
                      <i class="bi bi-pencil-square"></i>
                    </a>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>

        <!-- Pagination Controls -->
        <div class="mt-4 d-flex justify-content-center">
          <nav>
            <ul class="pagination" id="paginationControls"></ul>
          </nav>
        </div>

      </div>
    </div>
  </div>

  <!-- JavaScript -->
  <script>
    const rowsPerPage = 5;
    let currentPage = 1;

    function getVisibleRows() {
      const filter = document.getElementById("searchInput").value.toLowerCase();
      const allRows = Array.from(document.querySelectorAll("#studentTable tr"));

      return allRows.filter(row => {
        const cell = row.cells[1];
        const match = cell && cell.textContent.toLowerCase().includes(filter);
        row.style.display = match ? "" : "none"; // temporarily show/hide
        return match;
      });
    }

    function paginateTable() {
      const visibleRows = getVisibleRows();
      const totalPages = Math.ceil(visibleRows.length / rowsPerPage);

      // Hide all visible rows first
      visibleRows.forEach(row => row.style.display = "none");

      // Show only the rows for the current page
      const start = (currentPage - 1) * rowsPerPage;
      const end = start + rowsPerPage;
      for (let i = start; i < end && i < visibleRows.length; i++) {
        visibleRows[i].style.display = "";
      }

      // Generate pagination
      const pagination = document.getElementById("paginationControls");
      pagination.innerHTML = "";

      // Prev
      const prev = document.createElement("li");
      prev.className = `page-item ${currentPage === 1 ? "disabled" : ""}`;
      prev.innerHTML = `<a class="page-link" href="#">Prev</a>`;
      prev.addEventListener("click", () => {
        if (currentPage > 1) {
          currentPage--;
          paginateTable();
        }
      });
      pagination.appendChild(prev);

      // Page numbers
      for (let i = 1; i <= totalPages; i++) {
        const li = document.createElement("li");
        li.className = `page-item ${currentPage === i ? "active" : ""}`;
        li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
        li.addEventListener("click", () => {
          currentPage = i;
          paginateTable();
        });
        pagination.appendChild(li);
      }

      // Next
      const next = document.createElement("li");
      next.className = `page-item ${currentPage === totalPages ? "disabled" : ""}`;
      next.innerHTML = `<a class="page-link" href="#">Next</a>`;
      next.addEventListener("click", () => {
        if (currentPage < totalPages) {
          currentPage++;
          paginateTable();
        }
      });
      pagination.appendChild(next);
    }

    function filterAndPaginate() {
      currentPage = 1;
      paginateTable();
    }

    document.addEventListener("DOMContentLoaded", () => {
      paginateTable();
    });
  </script>

</body>
</html>
