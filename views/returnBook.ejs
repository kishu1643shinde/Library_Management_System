<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Return Book</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <style>
    body {
      background: linear-gradient(to right, #e0eafc, #cfdef3);
      font-family: 'Segoe UI', sans-serif;
    }
    .card {
      border-radius: 1rem;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }
    .form-label {
      font-weight: 600;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <div class="card p-4">
      <h2 class="text-center mb-4">ðŸ“š Return Book Form</h2>

      <form action="/returnBook" method="POST">
        <!-- Name -->
        <div class="mb-3">
          <label class="form-label">Name</label>
          <input type="text" class="form-control" id="name" name="name"  required />
        </div>

        <!-- Email -->
        <div class="mb-3">
          <label class="form-label">Email</label>
          <input type="email" class="form-control" id="email" name="email" required />
        </div>

        <!-- Book Category -->
        <div class="mb-3">
          <label class="form-label">Book Category</label>
          <select class="form-select" id="bookCategory" name="bookCategory" required>
            <option value="">-- Select Category --</option>
           
              <option value=""></option>
           
          </select>
        </div>

        <!-- Book Title -->
        <div class="mb-3">
          <label class="form-label">Book</label>
          <select class="form-select" id="bookTitle" name="bookTitle" required>
            <option value="">-- Select Book --</option>
          </select>
        </div>

        <!-- Status -->
        <div class="mb-3">
          <label class="form-label">Current Status</label>
          <select class="form-select" name="status" required>
            <option value="">-- Select Status --</option>
            <option value="issued">Issued</option>
            <option value="returned">Returned</option>
            <option value="overdue">Overdue</option>
          </select>
        </div>

        <!-- Return Date -->
        <div class="mb-3">
          <label class="form-label">Return Date</label>
          <input type="text" class="form-control" id="returnDate" name="returnDate" readonly />
        </div>

        <!-- Submit -->
        <div class="text-center">
          <button type="submit" class="btn btn-success px-5">Return Book</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    // Auto-fill today's return date
    document.getElementById("returnDate").value = new Date().toISOString().split("T")[0];

    const emailInput = document.getElementById("email");
    const nameInput = document.getElementById("name");
    const categorySelect = document.getElementById("bookCategory");
    const bookSelect = document.getElementById("bookTitle");

    // Populate Book Title when Category changes
    categorySelect.addEventListener("change", () => {
      const category = categorySelect.value;
      bookSelect.innerHTML = '<option value="">-- Select Book --</option>';

      if (category) {
        fetch(`/getBooksByCategory?category=${encodeURIComponent(category)}`)
          .then(res => res.json())
          .then(data => {
            data.forEach(book => {
              const opt = document.createElement("option");
              opt.value = book.title;
              opt.textContent = book.title;
              bookSelect.appendChild(opt);
            });
          })
          .catch(err => console.error("Error loading books:", err));
      }
    });

    // Auto-fill Name, Category and Book from Email
    emailInput.addEventListener("blur", () => {
      const email = emailInput.value.trim();
      if (!email) return;

      fetch(`/getUserIssuedBook?email=${encodeURIComponent(email)}`)
        .then(res => res.json())
        .then(data => {
          if (data) {
            nameInput.value = data.name;
            categorySelect.value = data.category;
            categorySelect.dispatchEvent(new Event('change'));

            setTimeout(() => {
              bookSelect.value = data.title;
            }, 100);
          } else {
            nameInput.value = '';
            categorySelect.value = '';
            bookSelect.innerHTML = '<option value="">-- Select Book --</option>';
          }
        })
        .catch(err => console.error("Error loading user data:", err));
    });
  </script>
</body>
</html>
