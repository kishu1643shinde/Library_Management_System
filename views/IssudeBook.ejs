<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Issue Book</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: #f4f5fc;
      color: #333;
    }

    .issue-form {
  border: 1px solid #ccc;
  background-color: #ffffff;
  padding: 30px;
  width: 80%;                 /* Use relative width */
  max-width: 1100px;          /* Adjust max size */
  margin: 50px auto 0 300px;  /* Left shift with margin-left */
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  animation: fadeIn 0.5s ease;
  position: relative;
  top: 15%;
}


    .form-title {
      text-align: center;
      font-weight: bold;
      font-size: 24px;
      margin-bottom: 30px;
    }

    .form-control, .btn-submit {
      border: 1px solid #888;
      border-radius: 4px;
    }

    .btn-submit {
      width: 100%;
      padding: 10px;
      font-weight: bold;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-10px); }
      to { opacity: 1; transform: translateY(0); }
    }
  </style>
</head>
<body>

  <form class="issue-form" action="/issuebooks" method="post">
    <div class="form-title">ðŸ“– Issue Book</div>

    <div class="row mb-3">
      <div class="col-md-6">
        <input type="text" name="book_title" class="form-control" placeholder="Enter Name" required>
      </div>
      <div class="col-md-6">
        <input type="email" name="email" class="form-control" placeholder="Email" required>
      </div>
    </div>

    <div class="row mb-3">
      <div class="col-md-6">
        <select id="category" name="category" class="form-control" required>
          <option value="">-- Select Category --</option>
          <% categories.forEach(category => { %>
            <option value="<%= category.id %>"><%= category.name %></option>
          <% }) %>
        </select>
      </div>
      <div class="col-md-6">
        <select class="form-control" name="book1" id="bookDropdown" required>
          <option selected disabled>Select Book</option>
        </select>
      </div>
    </div>

    <div class="row mb-3">
      <div class="col-md-6">
        <input type="date" id="issue_date" name="issue_date" class="form-control" required>
      </div>
      <div class="col-md-6">
        <input type="date" id="return_date" name="return_date" class="form-control" required>
      </div>
    </div>

    <div class="mb-3">
      <select name="status" class="form-control" required>
        <option value="issued" selected>Issued</option>
        <option value="returned">Returned</option>
        <option value="overdue">Overdue</option>
      </select>
    </div>

    <button type="submit" class="btn btn-dark btn-submit">Submit</button>
    <%= msg %>
  </form>

  <script>
    // Load books based on category
    document.getElementById('category').addEventListener('change', function () {
      const category_Id = this.value;
      const bookDropdown = document.getElementById('bookDropdown');

      fetch(`/get-books/${category_Id}`)
        .then(res => res.json())
        .then(books => {
          bookDropdown.innerHTML = '<option selected disabled>Select Book</option>';
          books.forEach(book => {
            const option = document.createElement('option');
            option.value = book.id;
            option.textContent = book.title;
            bookDropdown.appendChild(option);
          });
        })
        .catch(err => console.error("Error loading books:", err));
    });

    // Auto-fill issue and return dates
    window.addEventListener('DOMContentLoaded', () => {
      const issueDateInput = document.getElementById('issue_date');
      const returnDateInput = document.getElementById('return_date');
      const today = new Date();
      const returnDate = new Date();
      returnDate.setDate(today.getDate() + 7);

      const formatDate = date => {
        const y = date.getFullYear();
        const m = String(date.getMonth() + 1).padStart(2, '0');
        const d = String(date.getDate()).padStart(2, '0');
        return `${y}-${m}-${d}`;
      };

      issueDateInput.value = formatDate(today);
      returnDateInput.value = formatDate(returnDate);
    });
  </script>

</body>
</html>
